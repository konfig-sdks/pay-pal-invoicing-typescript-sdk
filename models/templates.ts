/*
Invoices

Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.

The version of the OpenAPI document: 2.3


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { AddressPortable } from './address-portable';
import { LinkDescription } from './link-description';
import { PhoneDetail } from './phone-detail';
import { Template } from './template';

/**
 * An array of merchant-created templates with associated details that include the emails, addresses, and phone numbers from the user\'s PayPal profile.
 * @export
 * @interface Templates
 */
export interface Templates {
    /**
     * An array of addresses in the user\'s PayPal profile.
     * @type {Array<AddressPortable>}
     * @memberof Templates
     */
    'addresses'?: Array<AddressPortable>;
    /**
     * The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
     * @type {string}
     * @memberof Templates
     */
    'emails'?: string;
    /**
     * An array of phone numbers in the user\'s PayPal profile.
     * @type {Array<PhoneDetail>}
     * @memberof Templates
     */
    'phones'?: Array<PhoneDetail>;
    /**
     * An array of details for each template. If `fields` is `none`, returns only the template name, ID, and default status.
     * @type {Array<Template>}
     * @memberof Templates
     */
    'templates'?: Array<Template>;
    /**
     * An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
     * @type {Array<LinkDescription>}
     * @memberof Templates
     */
    'links'?: Array<LinkDescription>;
}

