/*
Invoices

Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.

The version of the OpenAPI document: 2.3


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { Discount } from './discount';
import { Money } from './money';
import { Tax } from './tax';
import { UnitOfMeasure } from './unit-of-measure';

/**
 * An array of invoice line item information. The maximum items for an invoice is `100`.
 * @export
 * @interface Item
 */
export interface Item {
    /**
     * The item description for the invoice line item.
     * @type {string}
     * @memberof Item
     */
    'description'?: string;
    /**
     * The ID of the invoice line item.
     * @type {string}
     * @memberof Item
     */
    'id'?: string;
    /**
     * The item name for the invoice line item.
     * @type {string}
     * @memberof Item
     */
    'name': string;
    /**
     * The quantity of the item that the invoicer provides to the payer. Value is from `-1000000` to `1000000`. Supports up to five decimal places.
     * @type {string}
     * @memberof Item
     */
    'quantity': string;
    /**
     * 
     * @type {Money}
     * @memberof Item
     */
    'unit_amount': Money;
    /**
     * 
     * @type {Tax}
     * @memberof Item
     */
    'tax'?: Tax;
    /**
     * The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.
     * @type {string}
     * @memberof Item
     */
    'item_date'?: string;
    /**
     * 
     * @type {Discount}
     * @memberof Item
     */
    'discount'?: Discount;
    /**
     * The unit of measure for the invoiced item.
     * @type {UnitOfMeasure}
     * @memberof Item
     */
    'unit_of_measure'?: UnitOfMeasure;
}

