/*
Invoices

Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.

The version of the OpenAPI document: 2.3


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { AmountRange } from './amount-range';
import { DateRange } from './date-range';
import { DateTimeRange } from './date-time-range';
import { InvoiceStatus } from './invoice-status';

/**
 * The invoice search parameters.
 * @export
 * @interface SearchData
 */
export interface SearchData {
    /**
     * Filters the search by the email address.
     * @type {string}
     * @memberof SearchData
     */
    'recipient_email'?: string;
    /**
     * Filters the search by the recipient first name.
     * @type {string}
     * @memberof SearchData
     */
    'recipient_first_name'?: string;
    /**
     * Filters the search by the recipient last name.
     * @type {string}
     * @memberof SearchData
     */
    'recipient_last_name'?: string;
    /**
     * Filters the search by the recipient business name.
     * @type {string}
     * @memberof SearchData
     */
    'recipient_business_name'?: string;
    /**
     * Filters the search by the invoice number.
     * @type {string}
     * @memberof SearchData
     */
    'invoice_number'?: string;
    /**
     * An array of status values.
     * @type {Array<InvoiceStatus>}
     * @memberof SearchData
     */
    'status'?: Array<InvoiceStatus>;
    /**
     * The reference data, such as a PO number.
     * @type {string}
     * @memberof SearchData
     */
    'reference'?: string;
    /**
     * The [three-character ISO-4217 currency code](https://raw.githubusercontent.com) that identifies the currency.
     * @type {string}
     * @memberof SearchData
     */
    'currency_code'?: string;
    /**
     * A private bookkeeping memo for the user.
     * @type {string}
     * @memberof SearchData
     */
    'memo'?: string;
    /**
     * 
     * @type {AmountRange}
     * @memberof SearchData
     */
    'total_amount_range'?: AmountRange;
    /**
     * 
     * @type {DateRange}
     * @memberof SearchData
     */
    'invoice_date_range'?: DateRange;
    /**
     * 
     * @type {DateRange}
     * @memberof SearchData
     */
    'due_date_range'?: DateRange;
    /**
     * 
     * @type {DateTimeRange}
     * @memberof SearchData
     */
    'payment_date_range'?: DateTimeRange;
    /**
     * 
     * @type {DateTimeRange}
     * @memberof SearchData
     */
    'creation_date_range'?: DateTimeRange;
    /**
     * Indicates whether to list merchant-archived invoices in the response. Value is:<ul><li><code>true</code>. Response lists only merchant-archived invoices.</li><li><code>false</code>. Response lists only unarchived invoices.</li><li><code>null</code>. Response lists all invoices.</li></ul>
     * @type {boolean}
     * @memberof SearchData
     */
    'archived'?: boolean;
    /**
     * A CSV file of fields to return for the user, if available. Because the invoice object can be very large, field filtering is required. Valid collection fields are <code>items</code>, <code>payments</code>, <code>refunds</code>, <code>additional_recipients_info</code>, and <code>attachments</code>.
     * @type {Array<string>}
     * @memberof SearchData
     */
    'fields'?: Array<string>;
}

